<?php    
    // Fill these in with the information from your CoinPayments.net account.
    $cp_merchant_id = '53fad53f8882134757fd6959bae5c254';
    $cp_ipn_secret = 'SgtGigdi_Launcher-L1FA45';
    $cp_debug_email = '';

    //These would normally be loaded from your database, the most common way is to pass the Order ID through the 'custom' POST field.
    $order_currency = 'USD';

    function errorAndDie($error_msg) {
        global $cp_debug_email;
        if (!empty($cp_debug_email)) {
            $report = 'Error: '.$error_msg."\n\n";
            $report .= "POST Data\n\n";
            foreach ($_POST as $k => $v) {
                $report .= "|$k| = |$v|\n";
            }
            mail($cp_debug_email, 'CoinPayments IPN Error', $report);
        }
        die('IPN Error: '.$error_msg);
    }

    if (!isset($_POST['ipn_mode']) || $_POST['ipn_mode'] != 'hmac') {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/IPNMODEISNOTHMAC",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL); curl_close($cURL);
        errorAndDie('IPN Mode is not HMAC');
    }

    if (!isset($_SERVER['HTTP_HMAC']) || empty($_SERVER['HTTP_HMAC'])) {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/NoHMACSIGNATURESENT",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('No HMAC signature sent.');
    }

    $request = file_get_contents('php://input');
    if ($request === FALSE || empty($request)) {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/ERRORREADINGPOSTDATA",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('Error reading POST data');
    }

    if (!isset($_POST['merchant']) || $_POST['merchant'] != trim($cp_merchant_id)) {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/wrongmerchantID",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('No or incorrect Merchant ID passed');
    }

    $hmac = hash_hmac("sha512", $request, trim($cp_ipn_secret));
    if (!hash_equals($hmac, $_SERVER['HTTP_HMAC'])) {
    //if ($hmac != $_SERVER['HTTP_HMAC']) { <-- Use this if you are running a version of PHP below 5.6.0 without the hash_equals function
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/HMACSignaturedoesnotmatch",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('HMAC signature does not match');
    }

    // HMAC Signature verified at this point, load some variables.
    $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/workedwell",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
    $ipn_type = $_POST['ipn_type'];
    $txn_id = $_POST['txn_id'];
    $item_name = $_POST['item_name'];
    $item_number = $_POST['item_number'];
    $amount1 = floatval($_POST['amount1']);
    $amount2 = floatval($_POST['amount2']);
    $currency1 = $_POST['currency1'];
    $currency2 = $_POST['currency2'];
    $userid = $_POST['custom'];
    $status = intval($_POST['status']);
    $status_text = $_POST['status_text'];
// take user ID
$useridparam = "$userid";
// take the API url
$theurl = "https://getvariblesandthatsit.herokuapp.com/paymentispending/";
// combine them and include a secret
$final = "$theurl$useridparam";
$theurl2 = "https://getvariblesandthatsit.herokuapp.com/Originalcurrencymismatch/";
// combine them and include a secret2
$final2 = "$theurl$useridparam";
$theurl3 = "https://getvariblesandthatsit.herokuapp.com/Amountislessthanordertotal/";
// combine them and include a secret3
$final3 = "$theurl$useridparam";
$theurl4 = "https://getvariblesandthatsit.herokuapp.com/paymenterror/";
// combine them and include a secret4
$final4 = "$theurl$useridparam";
// depending on the item create a total this should occur with every single item on market using IF THEN statements
// order total added here incase an error occurs and I could test it
$order_total = 32.84;
if ($item_name == "TRANSFER") {
  $order_total = 32.84;
} else {
  // dont add this until the last item name $order_total = 100;
}
    if ($ipn_type != 'button') { // Advanced Button payment
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        die("IPN OK: Not a button payment");
    }

    //depending on the API of your system, you may want to check and see if the transaction ID $txn_id has already been handled before at this point

    // Check the original currency to make sure the buyer didn't change it.
    if ($currency1 != $order_currency) {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "$final2",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('Original currency mismatch!');
    }

    // Check amount against order total
    if ($amount1 < $order_total) {
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "$final3",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
        errorAndDie('Amount is less than order total!');
    }
 
    if ($status >= 100 || $status == 2) {
        // payment is complete or queued for nightly payout, success
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "https://getvariblesandthatsit.herokuapp.com/Originalcurrencymismatch/good",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
    } else if ($status < 0) {
        //payment error, this is usually final but payments will sometimes be reopened if there was no exchange rate conversion or with seller consent
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "$final4",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
    } else {
        //payment is pending, you can optionally add a note to the order page
        $cURL = curl_init(); $setopt_array = array(CURLOPT_URL => "$final",    CURLOPT_RETURNTRANSFER => true, CURLOPT_HTTPHEADER => array()); curl_setopt_array($cURL, $setopt_array); $json_response_data = curl_exec($cURL);  curl_close($cURL);
    }
    die('IPN OK');